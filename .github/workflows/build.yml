name: Build

on:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    # necessary for windows
    shell: bash

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ./target
          key: cargo-registry
      - name: Run tests
        run: cargo test --verbose

  build:
    name: Build (${{ matrix.TARGET }})
    strategy:
      fail-fast: false
      matrix:
        include:
          - TARGET: x86_64-unknown-linux-gnu # tested in a debian container on a mac
            OS: ubuntu-latest
          - TARGET: x86_64-apple-darwin # tested on a mac, is not properly signed so there are security warnings
            OS: macos-latest
          - TARGET: aarch64-apple-darwin # tested on a mac, is not properly signed so there are security warnings (M1)
            OS: macos-latest
          - TARGET: x86_64-pc-windows-gnu # tested on a windows machine
            OS: windows-latest
    needs: test
    runs-on: ${{ matrix.OS }}
    env:
      NAME: dicc-client
      TARGET: ${{ matrix.TARGET }}
      OS: ${{ matrix.OS }}
    steps:
      - uses: actions/checkout@v2
      - name: Cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ./target
          key: build-cargo-registry-${{matrix.TARGET}}
      - name: Install rust target
        run: rustup target add $TARGET
      - name: Run build
        run: cargo build --release --verbose --target $TARGET

      - name: Compress
        run: |
          mkdir -p ./artifacts

          # windows is the only OS using a different convention for executable file name
          if [[ $OS =~ ^windows.*$ ]]; then
              EXEC=$NAME.exe
          else
              EXEC=$NAME
          fi

          if [[ $GITHUB_REF_TYPE =~ ^tag$ ]]; then
            TAG=$GITHUB_REF_NAME
          else
            TAG=$GITHUB_SHA
          fi

          mv ./target/$TARGET/release/$EXEC ./$EXEC
          tar -czf ./artifacts/$NAME-$TARGET-$TAG.tar.gz $EXEC
      - name: Archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: result
          path: |
            ./artifacts